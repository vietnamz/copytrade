###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3-alpine as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add gcc python3-dev musl-dev python3-dev \
    && apk add --no-cache mariadb-dev


# lint
RUN pip install --upgrade pip
RUN pip install flake8 gunicorn
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY copytrade-dashboard/requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
# install psycopg2 dependencies
RUN apk update \
    && apk add gcc python3-dev musl-dev python3-dev \
    && apk add --no-cache mariadb-dev


# lint
RUN pip install --upgrade pip

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .

RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY docker/web.entrypoint.sh $APP_HOME

# copy project
COPY copytrade-dashboard/ $APP_HOME/

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run web.entrypoint.sh
ENTRYPOINT ["/home/app/web/web.entrypoint.sh"]